"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(
    os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
)

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

INSTALLED_APPS += (
    'django_cleanup.apps.CleanupConfig',
    'clientbase',
    'celeryapp'
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


CELERY_BROKER_URL = 'redis://redis:6379'
CELERY_RESULT_BACKEND = 'redis://redis:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'

CELERY_TASK_ROUTES = {
    'celeryapp.tasks.log_error': {'queue': 'main_queue'},
    'celeryapp.tasks.get_cheap_products_chain': {'queue': 'main_queue'},
    'celeryapp.tasks.get_avg_prices_of_products_chain':
        {'queue': 'main_queue'},
    'celeryapp.tasks.get_analog_list_of_product_list_chain':
        {'queue': 'main_queue'},

    'celeryapp.tasks.collect_data_task': {'queue': 'collect_queue'},
    'celeryapp.tasks.remove_repetitions_task': {'queue': 'collect_queue'},

    'celeryapp.tasks.write_cheap_products_task': {'queue': 'processing_queue'},
    'celeryapp.tasks.write_product_avr_prices_list_task':
        {'queue': 'processing_queue'},
    'celeryapp.tasks.write_analog_list_of_product_list_task':
        {'queue': 'processing_queue'},
}


DATE_INPUT_FORMATS = (
    '%Y-%m-%d', '%d-%m-%Y',
    '%Y/%m/%d', '%d/%m/%Y',
    '%Y.%m.%d', '%d.%m.%Y',
    '%Y %m %d', '%d %m %Y',
)

MAX_LIKES = 10
CLIENTS_PER_PAGE = 5

PRODUCT_DATA_JSON_SCHEMA = {
    "type": "array",
    "items": {
        "type": "object",
        "properties": {
            "shop": {"type": "string"},
            "product": {"type": "number"},
            "price": {"type": "number"},
            "series": {"type": "string"}
        },
        "required": ["shop", "product", "price", "series"]
    }
}

TEST_DATA_FILE_DIR = 'tests'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static/')
]

CLIENT_PHOTO_DIR = 'photo'
PRODUCT_DATA_DIR = 'data'
PRODUCT_LOGS_DIR = 'logs'

LOG_DIR = os.path.join(BASE_DIR, 'logs/tasks/')
